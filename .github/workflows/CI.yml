name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
jobs:
  Test:
    name: Test LFD Speaker on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        node-version: 
          - 10.x
          - 12.x
          - 14.x
          - 16.x

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install libasound2-dev
        run: sudo apt-get install -y libasound2-dev
        if: matrix.os == 'ubuntu-latest'

      # - name: Add msbuild to PATH
      #   uses: microsoft/setup-msbuild@v1
      #   if: matrix.os == 'windows-latest'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: cd lfd-speaker && yarn install --frozen-lockfile

      - name: Run Tests ðŸ§ª
        run: yarn test

  Publish:
    runs-on: ubuntu-latest
    needs:
      - Test
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          registry-url: https://registry.npmjs.org
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Publish ðŸš€
        run: yarn deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
